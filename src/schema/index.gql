# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreateUserInput {
  name: String!
  email: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""Scale of an expense"""
enum ExpenseScale {
  LOW
  MODERATE
  HIGH
}

type Mutation {
  createTransaction(transactionData: TransactionInput!): Transaction!
  updateTransaction(transactionData: TransactionInputUpdate!, transactionId: Float!): Transaction!
  deleteTransaction(transactionId: Float!): Boolean!
  createUser(userData: CreateUserInput!): User!
  updateUser(UserData: UpdateUserInput!, userId: Float!): User!
  deleteUser(userId: Float!): Boolean!
}

type Query {
  transactions: [Transaction!]!
  transaction(transactionId: Float!): Transaction!
  users: [User!]!
  user(userId: Float!): User!
}

type Transaction {
  id: ID!
  text: String!
  amount: Float!
  user: User
  transactionDate: DateTime!
  expenseScale: ExpenseScale!
}

input TransactionInput {
  text: String!
  amount: Float!
  userId: ID!
}

input TransactionInputUpdate {
  text: String
  amount: Float
}

input UpdateUserInput {
  name: String
  email: String
}

type User {
  id: ID!
  name: String!
  email: String!
  transactions: [Transaction!]
  totalTransactions: Int!
}
