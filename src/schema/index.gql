# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreateUserInput {
  email: String!
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""Scale of an expense"""
enum ExpenseScale {
  HIGH
  LOW
  MODERATE
}

type Mutation {
  createTransaction(transactionData: TransactionInput!): Transaction!
  createUser(userData: CreateUserInput!): User!
  deleteTransaction(transactionId: Float!): Boolean!
  deleteUser(userId: Float!): Boolean!
  updateTransaction(transactionData: TransactionInputUpdate!, transactionId: Float!): Transaction!
  updateUser(UserData: UpdateUserInput!, userId: Float!): User!
}

type Query {
  transaction(transactionId: Float!): Transaction!
  transactions: [Transaction!]!
  user(userId: Float!): User!
  users: [User!]!
}

type Transaction {
  amount: Float!
  expenseScale: ExpenseScale!
  id: ID!
  text: String!
  transactionDate: DateTime!
  user: User
}

input TransactionInput {
  amount: Float!
  text: String!
  userId: ID!
}

input TransactionInputUpdate {
  amount: Float
  text: String
}

input UpdateUserInput {
  email: String
  name: String
}

type User {
  email: String!
  id: ID!
  name: String!
  totalTransactions: Int!
  transactions: [Transaction!]
}
